/*
 * generated by Xtext 2.23.0
 */
package org.metafacture.flux.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.metafacture.flux.flux.Metaflow

@ExtendWith(InjectionExtension)
@InjectWith(FluxInjectorProvider)
class FluxParsingTest {
	@Inject
	ParseHelper<Metaflow> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
		default base = "";
		default gndsimple = base + "gnd-simplified.dat";
		
		gnd|
		open-file|
		as-lines|
		decode-pica|
		morph(FLUX_DIR + "format-gnd.xml")|
		encode-formeta(style="concise")|
		write(gndsimple);
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
